apply plugin: 'maven'
uploadArchives {
    repositories.mavenDeployer {
        pom.version = '1.0.0'
        pom.artifactId = 'cart'
        pom.groupId = 'com.fan.componentization.cart'
        repository(url: "file:///Volumes/Mechanical/G/maven/local-repo/")
    }
}


//apply plugin: 'maven'
//
//configurations {
//    deployerJars
//}
//
//repositories {
//    mavenCentral()
//}
//
////上传到Maven仓库的task
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            pom.version = '1.0.0' // 版本号
//            pom.artifactId = 'cart' // 项目名称（通常为类库模块名称，也可以任意）
//            pom.groupId = 'com.hfy.cart' // 唯一标识（通常为模块包名，也可以任意）
//
//            //指定快照版本 maven仓库url， todo 请改为自己的maven服务器地址、账号密码
//            snapshotRepository(url: 'http://xxx/maven-snapshots/') {
//                authentication(userName: '***', password: '***')
//            }
//            //指定正式版本 maven仓库url， todo 请改为自己的maven服务器地址、账号密码
//            repository(url: 'http://xxx/maven-releases/') {
//                authentication(userName: '***', password: '***')
//            }
//        }
//    }
//}
//
//// type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
//task androidJavadocs(type: Javadoc) {
//    // 设置源码所在的位置
//    source = android.sourceSets.main.java.sourceFiles
//}
//
//// 生成javadoc.jar
//task androidJavadocsJar(type: Jar) {
//    // 指定文档名称
//    classifier = 'javadoc'
//    from androidJavadocs.destinationDir
//}
//
//// 打包main目录下代码和资源的task，生成sources.jar
//task androidSourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.sourceFiles
//}
//
////配置需要上传到maven仓库的文件
//artifacts {
//    archives androidSourcesJar
//    archives androidJavadocsJar
//}
